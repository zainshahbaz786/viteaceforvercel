{"version":3,"sources":["app/modules/UserProfile/AccountInformation.js","app/modules/UserProfile/ProfileOverview.js","app/modules/UserProfile/ChangePassword.js","app/modules/UserProfile/PersonaInformation.js","app/modules/UserProfile/EmailSettings.js","app/modules/UserProfile/components/ProfileCard.js","app/modules/UserProfile/UserProfilePage.js"],"names":["connect","auth","props","useState","loading","setloading","dispatch","useDispatch","user","useSelector","state","shallowEqual","useEffect","initialValues","username","email","language","timeZone","communicationEmail","communication","communicationSMS","sms","communicationPhone","phone","Schema","Yup","shape","required","getInputClasses","fieldname","formik","touched","errors","useFormik","validationSchema","onSubmit","values","setStatus","setSubmitting","updatedUser","Object","assign","setUser","setTimeout","saveUser","onReset","resetForm","className","handleSubmit","type","disabled","isSubmitting","isValid","to","name","getFieldProps","placeholder","href","value","checked","onChange","handleChange","ProfileOverview","isError","setisError","currentPassword","password","cPassword","when","is","val","length","then","oneOf","role","src","toAbsoluteUrl","onClick","data-dismiss","aria-label","aria-hidden","pic","setPic","firstname","lastname","companyName","website","id","style","backgroundImage","data-action","data-toggle","title","data-original-title","accept","emailNotification","emailSettings","sendCopyToPersonalEmail","youHaveNewNotifications","activityRelatesEmail","youAreSentADirectMessage","someoneAddsYouAsAsAConnection","uponNewOrder","newMembershipApproval","memberRegistration","newsAboutKeenthemesProductsAndFeatureUpdates","updatesFromKeenthemes","tipsOnGettingMoreOutOfKeen","thingsYouMissedSindeYouLastLoggedIntoKeen","newsAboutMetronicOnPartnerProductsAndOtherServices","tipsOnMetronicBusinessProducts","ProfileCard","Utils","Dropdown","alignRight","Toggle","variant","as","DropdownCustomToggler","Menu","occupation","activeClassName","OverlayTrigger","placement","overlay","Tooltip","UserProfilePage","useSubheader","setTitle","from","exact","path","component","AccountInformation","ChangePassword","EmailSettings","PersonaInformation"],"mappings":"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","file":"static/js/3.4c4c45e0.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport * as auth from \"../Auth\";\n\nfunction AccountInformation(props) {\n  // Fields\n  const [loading, setloading] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user, shallowEqual);\n  useEffect(() => {}, [user]);\n\n  // Methods\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    const updatedUser = Object.assign(user, {\n      username: values.username,\n      email: values.email,\n      language: values.language,\n      timeZone: values.timeZone,\n      communication: {\n        email: values.communicationEmail,\n        sms: values.communicationSMS,\n        phone: values.communicationPhone,\n      },\n    });\n    // user for update preparation\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  };\n  // UI Helpers\n  const initialValues = {\n    username: user.username,\n    email: user.email,\n    language: user.language,\n    timeZone: user.timeZone,\n    communicationEmail: user.communication.email,\n    communicationSMS: user.communication.sms,\n    communicationPhone: user.communication.phone,\n  };\n  const Schema = Yup.object().shape({\n    username: Yup.string().required(\"Username is required\"),\n    email: Yup.string()\n      .email(\"Wrong email format\")\n      .required(\"Email is required\"),\n    language: Yup.string(),\n    timeZone: Yup.string(),\n    communicationEmail: Yup.bool(),\n    communicationSMS: Yup.bool(),\n    communicationPhone: Yup.bool(),\n  });\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, { resetForm }) => {\n      resetForm();\n    },\n  });\n\n  return (\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\n      {loading && <ModalProgressBar />}\n\n      {/* begin::Header */}\n      <div className=\"card-header py-3\">\n        <div className=\"card-title align-items-start flex-column\">\n          <h3 className=\"card-label font-weight-bolder text-dark\">\n            Account Information\n          </h3>\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\n            Change your account settings\n          </span>\n        </div>\n        <div className=\"card-toolbar\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            disabled={\n              formik.isSubmitting || (formik.touched && !formik.isValid)\n            }\n          >\n            Save Changes\n            {formik.isSubmitting}\n          </button>\n          <Link\n            to=\"/user-profile/profile-overview\"\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Form */}\n      <div className=\"form\">\n        <div className=\"card-body\">\n          {/* begin::Heading */}\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">Account:</h5>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Username</label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div>\n                <input\n                  type=\"text\"\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                    \"username\"\n                  )}`}\n                  name=\"username\"\n                  {...formik.getFieldProps(\"username\")}\n                />\n                {formik.touched.username && formik.errors.username ? (\n                  <div className=\"invalid-feedback\">\n                    {formik.errors.username}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Email Address\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"input-group input-group-lg input-group-solid\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <i className=\"fa fa-at\"></i>\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                    \"email\"\n                  )}`}\n                  name=\"email\"\n                  {...formik.getFieldProps(\"email\")}\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <div className=\"invalid-feedback\">{formik.errors.email}</div>\n                ) : null}\n              </div>\n              <span className=\"form-text text-muted\">\n                Email will not be publicly displayed.{` `}\n                <a href=\"#\" className=\"font-weight-bold\">\n                  Learn more\n                </a>\n                .\n              </span>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Language</label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <select\n                className=\"form-control form-control-lg form-control-solid\"\n                name=\"language\"\n                {...formik.getFieldProps(\"language\")}\n              >\n                <option>Select Language...</option>\n                <option value=\"id\">Bahasa Indonesia - Indonesian</option>\n                <option value=\"msa\">Bahasa Melayu - Malay</option>\n                <option value=\"ca\">Català - Catalan</option>\n                <option value=\"cs\">Čeština - Czech</option>\n                <option value=\"da\">Dansk - Danish</option>\n                <option value=\"de\">Deutsch - German</option>\n                <option value=\"en\">English</option>\n                <option value=\"en-gb\">English UK - British English</option>\n                <option value=\"es\">Español - Spanish</option>\n                <option value=\"eu\">Euskara - Basque (beta)</option>\n                <option value=\"fil\">Filipino</option>\n                <option value=\"fr\">Français - French</option>\n                <option value=\"pt\">Português - Portuguese</option>\n                <option value=\"ro\">Română - Romanian</option>\n                <option value=\"ru\">Русский - Russian</option>\n                <option value=\"sr\">Српски - Serbian</option>\n                <option value=\"uk\">Українська мова - Ukrainian</option>\n              </select>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Time Zone\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <select\n                className=\"form-control form-control-lg form-control-solid\"\n                name=\"timeZone\"\n                {...formik.getFieldProps(\"timeZone\")}\n              >\n                <option value=\"International Date Line West\">\n                  (GMT-11:00) International Date Line West\n                </option>\n                <option value=\"Midway Island\">(GMT-11:00) Midway Island</option>\n\n                <option value=\"Central America\">\n                  (GMT-06:00) Central America\n                </option>\n                <option value=\"Central Time (US &amp; Canada)\">\n                  (GMT-05:00) Central Time (US &amp; Canada)\n                </option>\n                <option value=\"Eastern Time (US &amp; Canada)\">\n                  (GMT-04:00) Eastern Time (US &amp; Canada)\n                </option>\n                <option value=\"Indiana (East)\">\n                  (GMT-04:00) Indiana (East)\n                </option>\n\n                <option value=\"Georgetown\">(GMT-04:00) Georgetown</option>\n\n                <option value=\"Buenos Aires\">(GMT-03:00) Buenos Aires</option>\n                <option value=\"Newfoundland\">(GMT-02:30) Newfoundland</option>\n                <option value=\"Mid-Atlantic\">(GMT-02:00) Mid-Atlantic</option>\n                <option value=\"Cape Verde Is.\">\n                  (GMT-01:00) Cape Verde Is.\n                </option>\n                <option value=\"UTC\">(GMT) UTC</option>\n                <option value=\"Dublin\">(GMT+01:00) Dublin</option>\n                <option value=\"Edinburgh\">(GMT+01:00) Edinburgh</option>\n                <option value=\"London\">(GMT+01:00) London</option>\n                <option value=\"Prague\">(GMT+02:00) Prague</option>\n                <option value=\"Helsinki\">(GMT+03:00) Helsinki</option>\n                <option value=\"Abu Dhabi\">(GMT+04:00) Abu Dhabi</option>\n                <option value=\"Tehran\">(GMT+04:30) Tehran</option>\n                <option value=\"Islamabad\">(GMT+05:00) Islamabad</option>\n                <option value=\"Karachi\">(GMT+05:00) Karachi</option>\n                <option value=\"Tashkent\">(GMT+05:00) Tashkent</option>\n                <option value=\"Kathmandu\">(GMT+05:45) Kathmandu</option>\n                <option value=\"Astana\">(GMT+06:00) Astana</option>\n              </select>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row align-items-center\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Communication\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-inline\">\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"communicationEmail\"\n                    checked={formik.values.communicationEmail}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Email\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"communicationSMS\"\n                    checked={formik.values.communicationSMS}\n                    {...formik.getFieldProps(\"communicationSMS\")}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>SMS\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"communicationPhone\"\n                    checked={formik.values.communicationPhone}\n                    {...formik.getFieldProps(\"communicationPhone\")}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Phone\n                </label>\n              </div>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"separator separator-dashed my-5\"></div>\n          {/* begin::Form Group */}\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">Security:</h5>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Login verification\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <button\n                type=\"button\"\n                className=\"btn btn-light-primary font-weight-bold btn-sm\"\n              >\n                Setup login verification\n              </button>\n              <p className=\"form-text text-muted pt-2\">\n                After you log in, you will be asked for additional information\n                to confirm your identity and protect your account from being\n                compromised. {` `}\n                <a href=\"#\" className=\"font-weight-bold\">\n                  Learn more\n                </a>\n                .\n              </p>\n            </div>\n          </div>\n          {/* begin::Form Group */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Password reset verification\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-inline\">\n                <label className=\"checkbox m-0\">\n                  <input type=\"checkbox\" />\n                  <span></span>Require personal information to reset your\n                  password.\n                </label>\n              </div>\n              <p className=\"form-text text-muted py-2\">\n                For extra security, this requires you to confirm your email or\n                phone number when you reset your password.\n                <a href=\"#\" className=\"font-weight-boldk\">\n                  Learn more\n                </a>\n                .\n              </p>\n              <button\n                type=\"button\"\n                className=\"btn btn-light-danger font-weight-bold btn-sm\"\n              >\n                Deactivate your account ?\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Form */}\n    </form>\n  );\n}\nexport default connect(null, auth.actions)(AccountInformation);\n","import React from \"react\";\n// import { AdvanceTablesWidget7, ListsWidget10, ListsWidget14 } from '../../../_metronic/_partials/widgets';\n// import { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\n\nexport function ProfileOverview() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-lg-6\">\n        {/* <ListsWidget14 className=\"card-stretch gutter-b\"></ListsWidget14> */}\n      </div>\n      <div className=\"col-lg-6\">\n        {/* <ListsWidget10 className=\"card-stretch gutter-b\"></ListsWidget10> */}\n      </div>\n      <div className=\"col-lg-12\">\n        {/* <AdvanceTablesWidget7 className=\"card-stretch gutter-b\"></AdvanceTablesWidget7> */}\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport SVG from \"react-inlinesvg\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\nimport * as auth from \"../Auth\";\n\nfunction ChangePassword(props) {\n  // Fields\n  const [loading, setloading] = useState(false);\n  const [isError, setisError] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user, shallowEqual);\n  useEffect(() => {}, [user]);\n  // Methods\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    setisError(false);\n    const updatedUser = Object.assign(user, {\n      password: values.password,\n    });\n    // user for update preparation\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      setisError(true);\n      // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  };\n  // UI Helpers\n  const initialValues = {\n    currentPassword: \"\",\n    password: \"\",\n    cPassword: \"\",\n  };\n  const Schema = Yup.object().shape({\n    currentPassword: Yup.string().required(\"Current password is required\"),\n    password: Yup.string().required(\"New Password is required\"),\n    cPassword: Yup.string()\n      .required(\"Password confirmation is required\")\n      .when(\"password\", {\n        is: (val) => (val && val.length > 0 ? true : false),\n        then: Yup.string().oneOf(\n          [Yup.ref(\"password\")],\n          \"Password and Confirm Password didn't match\"\n        ),\n      }),\n  });\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, { resetForm }) => {\n      resetForm();\n    },\n  });\n\n  return (\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\n      {loading && <ModalProgressBar />}\n\n      {/* begin::Header */}\n      <div className=\"card-header py-3\">\n        <div className=\"card-title align-items-start flex-column\">\n          <h3 className=\"card-label font-weight-bolder text-dark\">\n            Change Password\n          </h3>\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\n            Change your account password\n          </span>\n        </div>\n        <div className=\"card-toolbar\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            disabled={\n              formik.isSubmitting || (formik.touched && !formik.isValid)\n            }\n          >\n            Save Changes\n            {formik.isSubmitting}\n          </button>\n          <Link\n            to=\"/user-profile/profile-overview\"\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Form */}\n      <div className=\"form\">\n        <div className=\"card-body\">\n          {/* begin::Alert */}\n          {isError && (\n            <div\n              className=\"alert alert-custom alert-light-danger fade show mb-10\"\n              role=\"alert\"\n            >\n              <div className=\"alert-icon\">\n                <span className=\"svg-icon svg-icon-3x svg-icon-danger\">\n                  <SVG\n                    src={toAbsoluteUrl(\"/media/svg/icons/Code/Info-circle.svg\")}\n                  ></SVG>{\" \"}\n                </span>\n              </div>\n              <div className=\"alert-text font-weight-bold\">\n                Configure user passwords to expire periodically. Users will need\n                warning that their passwords are going to expire,\n                <br />\n                or they might inadvertently get locked out of the system!\n              </div>\n              <div className=\"alert-close\" onClick={() => setisError(false)}>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"alert\"\n                  aria-label=\"Close\"\n                >\n                  <span aria-hidden=\"true\">\n                    <i className=\"ki ki-close\"></i>\n                  </span>\n                </button>\n              </div>\n            </div>\n          )}\n          {/* end::Alert */}\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\n              Current Password\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"password\"\n                placeholder=\"Current Password\"\n                className={`form-control form-control-lg form-control-solid mb-2 ${getInputClasses(\n                  \"currentPassword\"\n                )}`}\n                name=\"currentPassword\"\n                {...formik.getFieldProps(\"currentPassword\")}\n              />\n              {formik.touched.currentPassword &&\n              formik.errors.currentPassword ? (\n                <div className=\"invalid-feedback\">\n                  {formik.errors.currentPassword}\n                </div>\n              ) : null}\n              <a href=\"#\" className=\"text-sm font-weight-bold\">\n                Forgot password ?\n              </a>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\n              New Password\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"password\"\n                placeholder=\"New Password\"\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                  \"password\"\n                )}`}\n                name=\"password\"\n                {...formik.getFieldProps(\"password\")}\n              />\n              {formik.touched.password && formik.errors.password ? (\n                <div className=\"invalid-feedback\">{formik.errors.password}</div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label text-alert\">\n              Verify Password\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"password\"\n                placeholder=\"Verify Password\"\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                  \"cPassword\"\n                )}`}\n                name=\"cPassword\"\n                {...formik.getFieldProps(\"cPassword\")}\n              />\n              {formik.touched.cPassword && formik.errors.cPassword ? (\n                <div className=\"invalid-feedback\">\n                  {formik.errors.cPassword}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Form */}\n    </form>\n  );\n}\n\nexport default connect(null, auth.actions)(ChangePassword);\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport { toAbsoluteUrl } from \"../../../_metronic/_helpers\";\nimport * as auth from \"../Auth\";\n\nfunction PersonaInformation(props) {\n  // Fields\n  const [loading, setloading] = useState(false);\n  const [pic, setPic] = useState(\"\");\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user, shallowEqual);\n  useEffect(() => {\n    if (user.pic) {\n      setPic(user.pic);\n    }\n  }, [user]);\n  // Methods\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    const updatedUser = Object.assign(user, values);\n    // user for update preparation\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  };\n  // UI Helpers\n  const initialValues = {\n    pic: user.pic,\n    firstname: user.firstname,\n    lastname: user.lastname,\n    companyName: user.companyName,\n    phone: user.phone,\n    email: user.email,\n    website: user.website,\n  };\n  const Schema = Yup.object().shape({\n    pic: Yup.string(),\n    firstname: Yup.string().required(\"First name is required\"),\n    lastname: Yup.string().required(\"Last name is required\"),\n    companyName: Yup.string(),\n    phone: Yup.string().required(\"Phone is required\"),\n    email: Yup.string()\n      .email(\"Wrong email format\")\n      .required(\"Email is required\"),\n    website: Yup.string(),\n  });\n  const getInputClasses = (fieldname) => {\n    if (formik.touched[fieldname] && formik.errors[fieldname]) {\n      return \"is-invalid\";\n    }\n\n    if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n      return \"is-valid\";\n    }\n\n    return \"\";\n  };\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, { resetForm }) => {\n      resetForm();\n    },\n  });\n  const getUserPic = () => {\n    if (!pic) {\n      return \"none\";\n    }\n\n    return `url(${pic})`;\n  };\n  const removePic = () => {\n    setPic(\"\");\n  };\n  return (\n    <form\n      className=\"card card-custom card-stretch\"\n      onSubmit={formik.handleSubmit}\n    >\n      {loading && <ModalProgressBar />}\n\n      {/* begin::Header */}\n      <div className=\"card-header py-3\">\n        <div className=\"card-title align-items-start flex-column\">\n          <h3 className=\"card-label font-weight-bolder text-dark\">\n            Personal Information\n          </h3>\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\n            Update your personal informaiton\n          </span>\n        </div>\n        <div className=\"card-toolbar\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            disabled={\n              formik.isSubmitting || (formik.touched && !formik.isValid)\n            }\n          >\n            Save Changes\n            {formik.isSubmitting}\n          </button>\n          <Link\n            to=\"/user-profile/profile-overview\"\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Form */}\n      <div className=\"form\">\n        {/* begin::Body */}\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">Customer Info</h5>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">Avatar</label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div\n                className=\"image-input image-input-outline\"\n                id=\"kt_profile_avatar\"\n                style={{\n                  backgroundImage: `url(${toAbsoluteUrl(\n                    \"/media/users/blank.png\"\n                  )}`,\n                }}\n              >\n                <div\n                  className=\"image-input-wrapper\"\n                  style={{ backgroundImage: `${getUserPic()}` }}\n                />\n                <label\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\n                  data-action=\"change\"\n                  data-toggle=\"tooltip\"\n                  title=\"\"\n                  data-original-title=\"Change avatar\"\n                >\n                  <i className=\"fa fa-pen icon-sm text-muted\"></i>\n                  <input\n                    type=\"file\"\n                    // name=\"pic\"\n                    accept=\".png, .jpg, .jpeg\"\n                    // {...formik.getFieldProps(\"pic\")}\n                  />\n                  <input type=\"hidden\" name=\"profile_avatar_remove\" />\n                </label>\n                <span\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\n                  data-action=\"cancel\"\n                  data-toggle=\"tooltip\"\n                  title=\"\"\n                  data-original-title=\"Cancel avatar\"\n                >\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\n                </span>\n                <span\n                  onClick={removePic}\n                  className=\"btn btn-xs btn-icon btn-circle btn-white btn-hover-text-primary btn-shadow\"\n                  data-action=\"remove\"\n                  data-toggle=\"tooltip\"\n                  title=\"\"\n                  data-original-title=\"Remove avatar\"\n                >\n                  <i className=\"ki ki-bold-close icon-xs text-muted\"></i>\n                </span>\n              </div>\n              <span className=\"form-text text-muted\">\n                Allowed file types: png, jpg, jpeg.\n              </span>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              First Name\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"text\"\n                placeholder=\"First name\"\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                  \"firstname\"\n                )}`}\n                name=\"firstname\"\n                {...formik.getFieldProps(\"firstname\")}\n              />\n              {formik.touched.firstname && formik.errors.firstname ? (\n                <div className=\"invalid-feedback\">\n                  {formik.errors.firstname}\n                </div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Last Name\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"text\"\n                placeholder=\"Last name\"\n                className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                  \"lastname\"\n                )}`}\n                name=\"lastname\"\n                {...formik.getFieldProps(\"lastname\")}\n              />\n              {formik.touched.lastname && formik.errors.lastname ? (\n                <div className=\"invalid-feedback\">{formik.errors.lastname}</div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Company Name\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <input\n                type=\"text\"\n                placeholder=\"Company name\"\n                className={`form-control form-control-lg form-control-solid`}\n                name=\"companyName\"\n                {...formik.getFieldProps(\"companyName\")}\n              />\n              <span className=\"form-text text-muted\">\n                If you want your invoices addressed to a company. Leave blank to\n                use your full name.\n              </span>\n            </div>\n          </div>\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mt-10 mb-6\">Contact Info</h5>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Contact Phone\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"input-group input-group-lg input-group-solid\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <i className=\"fa fa-phone\"></i>\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  placeholder=\"+1(123)112-11-11\"\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                    \"phone\"\n                  )}`}\n                  name=\"phone\"\n                  {...formik.getFieldProps(\"phone\")}\n                />\n              </div>\n              {formik.touched.phone && formik.errors.phone ? (\n                <div className=\"invalid-feedback display-block\">\n                  {formik.errors.phone}\n                </div>\n              ) : null}\n              <span className=\"form-text text-muted\">\n                We'll never share your phone with anyone else.\n              </span>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Email Address\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"input-group input-group-lg input-group-solid\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\">\n                    <i className=\"fa fa-at\"></i>\n                  </span>\n                </div>\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  className={`form-control form-control-lg form-control-solid ${getInputClasses(\n                    \"email\"\n                  )}`}\n                  name=\"email\"\n                  {...formik.getFieldProps(\"email\")}\n                />\n              </div>\n              {formik.touched.email && formik.errors.email ? (\n                <div className=\"invalid-feedback display-block\">\n                  {formik.errors.email}\n                </div>\n              ) : null}\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label\">\n              Company Site\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"input-group input-group-lg input-group-solid\">\n                <input\n                  type=\"text\"\n                  placeholder=\"https://keenthemes.com\"\n                  className={`form-control form-control-lg form-control-solid`}\n                  name=\"website\"\n                  {...formik.getFieldProps(\"website\")}\n                />\n              </div>\n              {formik.touched.website && formik.errors.website ? (\n                <div className=\"invalid-feedback display-block\">\n                  {formik.errors.website}\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n        {/* end::Body */}\n      </div>\n      {/* end::Form */}\n    </form>\n  );\n}\n\nexport default connect(null, auth.actions)(PersonaInformation);\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector, shallowEqual, connect, useDispatch } from \"react-redux\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ModalProgressBar } from \"../../../_metronic/_partials/controls\";\nimport * as auth from \"../Auth\";\n\nfunction EmailSettings(props) {\n  // Fields\n  const [loading, setloading] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector((state) => state.auth.user, shallowEqual);\n  useEffect(() => {}, [user]);\n  // Methods\n  const saveUser = (values, setStatus, setSubmitting) => {\n    setloading(true);\n    const updatedUser = Object.assign(user, {\n      emailSettings: {\n        emailNotification: values.emailNotification,\n        sendCopyToPersonalEmail: values.sendCopyToPersonalEmail,\n        activityRelatesEmail: {\n          youHaveNewNotifications: values.youHaveNewNotifications,\n          youAreSentADirectMessage: values.youAreSentADirectMessage,\n          someoneAddsYouAsAsAConnection: values.someoneAddsYouAsAsAConnection,\n          uponNewOrder: values.uponNewOrder,\n          newMembershipApproval: values.newMembershipApproval,\n          memberRegistration: values.memberRegistration,\n        },\n        updatesFromKeenthemes: {\n          newsAboutKeenthemesProductsAndFeatureUpdates:\n            values.newsAboutKeenthemesProductsAndFeatureUpdates,\n          tipsOnGettingMoreOutOfKeen: values.tipsOnGettingMoreOutOfKeen,\n          thingsYouMissedSindeYouLastLoggedIntoKeen:\n            values.thingsYouMissedSindeYouLastLoggedIntoKeen,\n          newsAboutMetronicOnPartnerProductsAndOtherServices:\n            values.newsAboutMetronicOnPartnerProductsAndOtherServices,\n          tipsOnMetronicBusinessProducts: values.tipsOnMetronicBusinessProducts,\n        },\n      },\n    });\n    // user for update preparation\n    dispatch(props.setUser(updatedUser));\n    setTimeout(() => {\n      setloading(false);\n      setSubmitting(false);\n      // Do request to your server for user update, we just imitate user update there, For example:\n      // update(updatedUser)\n      //  .then(()) => {\n      //    setloading(false);\n      //  })\n      //  .catch((error) => {\n      //    setloading(false);\n      //    setSubmitting(false);\n      //    setStatus(error);\n      // });\n    }, 1000);\n  };\n  // UI Helpers\n  const initialValues = {\n    emailNotification: user.emailSettings.emailNotification,\n    sendCopyToPersonalEmail: user.emailSettings.sendCopyToPersonalEmail,\n    youHaveNewNotifications:\n      user.emailSettings.activityRelatesEmail.youHaveNewNotifications,\n    youAreSentADirectMessage:\n      user.emailSettings.activityRelatesEmail.youAreSentADirectMessage,\n    someoneAddsYouAsAsAConnection:\n      user.emailSettings.activityRelatesEmail.someoneAddsYouAsAsAConnection,\n    uponNewOrder: user.emailSettings.activityRelatesEmail.uponNewOrder,\n    newMembershipApproval:\n      user.emailSettings.activityRelatesEmail.newMembershipApproval,\n    memberRegistration:\n      user.emailSettings.activityRelatesEmail.memberRegistration,\n    newsAboutKeenthemesProductsAndFeatureUpdates:\n      user.emailSettings.updatesFromKeenthemes\n        .newsAboutKeenthemesProductsAndFeatureUpdates,\n    tipsOnGettingMoreOutOfKeen:\n      user.emailSettings.updatesFromKeenthemes.tipsOnGettingMoreOutOfKeen,\n    thingsYouMissedSindeYouLastLoggedIntoKeen:\n      user.emailSettings.updatesFromKeenthemes\n        .thingsYouMissedSindeYouLastLoggedIntoKeen,\n    newsAboutMetronicOnPartnerProductsAndOtherServices:\n      user.emailSettings.updatesFromKeenthemes\n        .newsAboutMetronicOnPartnerProductsAndOtherServices,\n    tipsOnMetronicBusinessProducts:\n      user.emailSettings.updatesFromKeenthemes.tipsOnMetronicBusinessProducts,\n  };\n  const Schema = Yup.object().shape({\n    emailNotification: Yup.bool(),\n    sendCopyToPersonalEmail: Yup.bool(),\n    youHaveNewNotifications: Yup.bool(),\n    youAreSentADirectMessage: Yup.bool(),\n    someoneAddsYouAsAsAConnection: Yup.bool(),\n    uponNewOrder: Yup.bool(),\n    newMembershipApproval: Yup.bool(),\n    memberRegistration: Yup.bool(),\n    newsAboutKeenthemesProductsAndFeatureUpdates: Yup.bool(),\n    tipsOnGettingMoreOutOfKeen: Yup.bool(),\n    thingsYouMissedSindeYouLastLoggedIntoKeen: Yup.bool(),\n    newsAboutMetronicOnPartnerProductsAndOtherServices: Yup.bool(),\n    tipsOnMetronicBusinessProducts: Yup.bool(),\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Schema,\n    onSubmit: (values, { setStatus, setSubmitting }) => {\n      saveUser(values, setStatus, setSubmitting);\n    },\n    onReset: (values, { resetForm }) => {\n      resetForm();\n    },\n  });\n  return (\n    <form className=\"card card-custom\" onSubmit={formik.handleSubmit}>\n      {loading && <ModalProgressBar />}\n\n      {/* begin::Header */}\n      <div className=\"card-header py-3\">\n        <div className=\"card-title align-items-start flex-column\">\n          <h3 className=\"card-label font-weight-bolder text-dark\">\n            Email Settings\n          </h3>\n          <span className=\"text-muted font-weight-bold font-size-sm mt-1\">\n            Change your email settings\n          </span>\n        </div>\n        <div className=\"card-toolbar\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mr-2\"\n            disabled={\n              formik.isSubmitting || (formik.touched && !formik.isValid)\n            }\n          >\n            Save Changes\n            {formik.isSubmitting}\n          </button>\n          <Link\n            to=\"/user-profile/profile-overview\"\n            className=\"btn btn-secondary\"\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n      {/* end::Header */}\n      {/* begin::Form */}\n      <div className=\"form\">\n        <div className=\"card-body\">\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">\n                Setup Email Notification:\n              </h5>\n            </div>\n          </div>\n          <div className=\"form-group row align-items-center\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\n              Email Notification\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <span className=\"switch switch-sm\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"emailNotification\"\n                    checked={formik.values.emailNotification}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>\n                </label>\n              </span>\n            </div>\n          </div>\n          <div className=\"form-group row align-items-center\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\n              Send Copy To Personal Email\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <span className=\"switch switch-sm\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"sendCopyToPersonalEmail\"\n                    checked={formik.values.sendCopyToPersonalEmail}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>\n                </label>\n              </span>\n            </div>\n          </div>\n          <div className=\"separator separator-dashed my-10\"></div>\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">\n                Activity Related Emails:\n              </h5>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\n              When To Email\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-list\">\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"youHaveNewNotifications\"\n                    checked={formik.values.youHaveNewNotifications}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>You have new notifications\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"youAreSentADirectMessage\"\n                    checked={formik.values.youAreSentADirectMessage}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>You're sent a direct message\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"someoneAddsYouAsAsAConnection\"\n                    checked={formik.values.someoneAddsYouAsAsAConnection}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Someone adds you as a connection\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\n              When To Escalate Emails\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-list\">\n                <label className=\"checkbox checkbox-primary\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"uponNewOrder\"\n                    checked={formik.values.uponNewOrder}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Upon new order\n                </label>\n                <label className=\"checkbox checkbox-primary\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"newMembershipApproval\"\n                    checked={formik.values.newMembershipApproval}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>New membership approval\n                </label>\n                <label className=\"checkbox checkbox-primary\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"memberRegistration\"\n                    checked={formik.values.memberRegistration}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Member registration\n                </label>\n              </div>\n            </div>\n          </div>\n          <div className=\"separator separator-dashed my-10\"></div>\n          <div className=\"row\">\n            <label className=\"col-xl-3\"></label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <h5 className=\"font-weight-bold mb-6\">\n                Updates From Keenthemes:\n              </h5>\n            </div>\n          </div>\n          <div className=\"form-group row\">\n            <label className=\"col-xl-3 col-lg-3 col-form-label font-weight-bold text-left text-lg-right\">\n              Email You With\n            </label>\n            <div className=\"col-lg-9 col-xl-6\">\n              <div className=\"checkbox-list\">\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"newsAboutKeenthemesProductsAndFeatureUpdates\"\n                    checked={\n                      formik.values.newsAboutKeenthemesProductsAndFeatureUpdates\n                    }\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>News about Keenthemes products and feature\n                  updates\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"tipsOnGettingMoreOutOfKeen\"\n                    checked={formik.values.tipsOnGettingMoreOutOfKeen}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Tips on getting more out of Keen\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"thingsYouMissedSindeYouLastLoggedIntoKeen\"\n                    checked={\n                      formik.values.thingsYouMissedSindeYouLastLoggedIntoKeen\n                    }\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Things you missed since you last logged into Keen\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"newsAboutMetronicOnPartnerProductsAndOtherServices\"\n                    checked={\n                      formik.values\n                        .newsAboutMetronicOnPartnerProductsAndOtherServices\n                    }\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>News about Metronic on partner products and other\n                  services\n                </label>\n                <label className=\"checkbox\">\n                  <input\n                    type=\"checkbox\"\n                    name=\"tipsOnMetronicBusinessProducts\"\n                    checked={formik.values.tipsOnMetronicBusinessProducts}\n                    onChange={formik.handleChange}\n                  />\n                  <span></span>Tips on Metronic business products\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end::Form */}\n    </form>\n  );\n}\n\nexport default connect(null, auth.actions)(EmailSettings);\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport { Dropdown, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport SVG from \"react-inlinesvg\";\nimport { toAbsoluteUrl } from \"../../../../_metronic/_helpers\";\nimport * as Utils from \"../../../Common/Common\";\n\nimport {\n  DropdownCustomToggler,\n  DropdownMenu4,\n} from \"../../../../_metronic/_partials/dropdowns\";\n\nexport function ProfileCard() {\n  // const user = useSelector(({ auth }) => auth.user, shallowEqual);\n  const user = Utils.GetCurrentUser();\n\n  useEffect(() => {\n    return () => {};\n  }, [user]);\n\n  return (\n    <>\n      {user && (\n        <div\n          className=\"flex-row-auto offcanvas-mobile w-250px w-xxl-350px\"\n          id=\"kt_profile_aside\"\n        >\n          <div className=\"card card-custom card-stretch\">\n            {/* begin::Body */}\n            <div className=\"card-body pt-4\">\n              {/* begin::Toolbar */}\n              <div className=\"d-flex justify-content-end\">\n                <Dropdown className=\"dropdown dropdown-inline\" alignRight>\n                  <Dropdown.Toggle\n                    className=\"btn btn-clean btn-hover-light-primary btn-sm btn-icon cursor-pointer\"\n                    variant=\"transparent\"\n                    id=\"dropdown-toggle-top-user-profile\"\n                    as={DropdownCustomToggler}\n                  >\n                    <i className=\"ki ki-bold-more-hor\"></i>\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu className=\"dropdown-menu dropdown-menu-sm dropdown-menu-right\">\n                    <DropdownMenu4></DropdownMenu4>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </div>\n              {/* end::Toolbar */}\n              {/* begin::User */}\n              <div className=\"d-flex align-items-center\">\n                <div className=\"symbol symbol-60 symbol-xxl-100 mr-5 align-self-start align-self-xxl-center\">\n                  <div\n                    className=\"symbol-label\"\n                    style={{ backgroundImage: `url(${user.pic})` }}\n                  ></div>\n                  {/* style=\"background-i\n                  mage:url('/metronic/theme/html/demo1/dist/assets/media/users/300_21.jpg')\" */}\n                  <i className=\"symbol-badge bg-success\"></i>\n                </div>\n                <div>\n                  <a\n                    href=\"#\"\n                    className=\"font-weight-bolder font-size-h5 text-dark-75 text-hover-primary\"\n                  >\n                    {user.firstname} {user.lastname}\n                  </a>\n                  <div className=\"text-muted\">{user.occupation}</div>\n                  <div className=\"mt-2\">\n                    <a\n                      href=\"#\"\n                      className=\"btn btn-sm btn-primary font-weight-bold mr-2 py-2 px-3 px-xxl-5 my-1\"\n                    >\n                      Chat\n                    </a>\n                    <a\n                      href=\"#\"\n                      className=\"btn btn-sm btn-success font-weight-bold py-2 px-3 px-xxl-5 my-1\"\n                    >\n                      Follow\n                    </a>\n                  </div>\n                </div>\n              </div>\n              {/* end::User */}\n              {/* begin::Contact */}\n              <div className=\"py-9\">\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                  <span className=\"font-weight-bold mr-2\">Email:</span>\n                  <span className=\"text-muted text-hover-primary\">\n                    {user.email}\n                  </span>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                  <span className=\"font-weight-bold mr-2\">Phone:</span>\n                  <span className=\"text-muted\">{user.phone}</span>\n                </div>\n                <div className=\"d-flex align-items-center justify-content-between\">\n                  <span className=\"font-weight-bold mr-2\">Location:</span>\n                  <span className=\"text-muted\">address line 1, city state</span>\n                </div>\n              </div>\n              {/* end::Contact */}\n              {/* begin::Nav */}\n              <div className=\"navi navi-bold navi-hover navi-active navi-link-rounded\">\n                <div className=\"navi-item mb-2\">\n                  <NavLink\n                    to=\"/user-profile/profile-overview\"\n                    className=\"navi-link py-4\"\n                    activeClassName=\"active\"\n                  >\n                    <span className=\"navi-icon mr-2\">\n                      <span className=\"svg-icon\">\n                        <SVG\n                          src={toAbsoluteUrl(\n                            \"/media/svg/icons/Design/Layers.svg\"\n                          )}\n                        ></SVG>{\" \"}\n                      </span>\n                    </span>\n                    <span className=\"navi-text font-size-lg\">\n                      Profile Overview\n                    </span>\n                  </NavLink>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <NavLink\n                    to=\"/user-profile/personal-information\"\n                    className=\"navi-link py-4\"\n                    activeClassName=\"active\"\n                  >\n                    <span className=\"navi-icon mr-2\">\n                      <span className=\"svg-icon\">\n                        <SVG\n                          src={toAbsoluteUrl(\n                            \"/media/svg/icons/General/User.svg\"\n                          )}\n                        ></SVG>{\" \"}\n                      </span>\n                    </span>\n                    <span className=\"navi-text font-size-lg\">\n                      Personal Information\n                    </span>\n                  </NavLink>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <NavLink\n                    to=\"/user-profile/account-information\"\n                    className=\"navi-link py-4\"\n                    activeClassName=\"active\"\n                  >\n                    <span className=\"navi-icon mr-2\">\n                      <span className=\"svg-icon\">\n                        <SVG\n                          src={toAbsoluteUrl(\n                            \"/media/svg/icons/Code/Compiling.svg\"\n                          )}\n                        ></SVG>{\" \"}\n                      </span>\n                    </span>\n                    <span className=\"navi-text font-size-lg\">\n                      Account Information\n                    </span>\n                  </NavLink>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <NavLink\n                    to=\"/user-profile/change-password\"\n                    className=\"navi-link py-4\"\n                    activeClassName=\"active\"\n                  >\n                    <span className=\"navi-icon mr-2\">\n                      <span className=\"svg-icon\">\n                        <SVG\n                          src={toAbsoluteUrl(\n                            \"/media/svg/icons/Communication/Shield-user.svg\"\n                          )}\n                        ></SVG>{\" \"}\n                      </span>\n                    </span>\n                    <span className=\"navi-text font-size-lg\">\n                      Change Password\n                    </span>\n                    <span className=\"navi-label\">\n                      <span className=\"label label-light-danger label-rounded font-weight-bold\">\n                        5\n                      </span>\n                    </span>\n                  </NavLink>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <NavLink\n                    to=\"/user-profile/email-settings\"\n                    className=\"navi-link py-4\"\n                    activeClassName=\"active\"\n                  >\n                    <span className=\"navi-icon mr-2\">\n                      <span className=\"svg-icon\">\n                        <SVG\n                          src={toAbsoluteUrl(\n                            \"/media/svg/icons/Communication/Mail-opened.svg\"\n                          )}\n                        ></SVG>{\" \"}\n                      </span>\n                    </span>\n                    <span className=\"navi-text font-size-lg\">\n                      Email settings\n                    </span>\n                  </NavLink>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <OverlayTrigger\n                    placement=\"right\"\n                    overlay={<Tooltip>Coming soon...</Tooltip>}\n                  >\n                    <a href=\"#\" className=\"navi-link py-4\">\n                      <span className=\"navi-icon mr-2\">\n                        <span className=\"svg-icon\">\n                          <SVG\n                            src={toAbsoluteUrl(\n                              \"/media/svg/icons/Layout/Layout-top-panel-6.svg\"\n                            )}\n                          ></SVG>{\" \"}\n                        </span>\n                      </span>\n                      <span className=\"navi-text font-size-lg\">\n                        Saved Credit Cards\n                      </span>\n                    </a>\n                  </OverlayTrigger>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <OverlayTrigger\n                    placement=\"right\"\n                    overlay={<Tooltip>Coming soon...</Tooltip>}\n                  >\n                    <a href=\"#\" className=\"navi-link py-4\">\n                      <span className=\"navi-icon mr-2\">\n                        <span className=\"svg-icon\">\n                          <SVG\n                            src={toAbsoluteUrl(\n                              \"/media/svg/icons/Files/File.svg\"\n                            )}\n                          ></SVG>{\" \"}\n                        </span>\n                      </span>\n                      <span className=\"navi-text font-size-lg\">\n                        Tax information\n                      </span>\n                      <span className=\"navi-label\">\n                        <span className=\"label label-light-primary label-inline font-weight-bold\">\n                          new\n                        </span>\n                      </span>\n                    </a>\n                  </OverlayTrigger>\n                </div>\n                <div className=\"navi-item mb-2\">\n                  <OverlayTrigger\n                    placement=\"right\"\n                    overlay={<Tooltip>Coming soon...</Tooltip>}\n                  >\n                    <a href=\"#\" className=\"navi-link py-4\">\n                      <span className=\"navi-icon mr-2\">\n                        <span className=\"svg-icon\">\n                          <SVG\n                            src={toAbsoluteUrl(\n                              \"/media/svg/icons/Text/Article.svg\"\n                            )}\n                          ></SVG>{\" \"}\n                        </span>\n                      </span>\n                      <span className=\"navi-text\">Statements</span>\n                    </a>\n                  </OverlayTrigger>\n                </div>\n              </div>\n              {/* end::Nav */}\n            </div>\n            {/* end::Body */}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport { useSubheader } from \"../../../_metronic/layout\";\nimport AccountInformation from \"./AccountInformation\";\nimport { ProfileOverview } from \"./ProfileOverview\";\nimport ChangePassword from \"./ChangePassword\";\nimport PersonaInformation from \"./PersonaInformation\";\nimport EmailSettings from \"./EmailSettings\";\nimport { ProfileCard } from \"./components/ProfileCard\";\n\nexport default function UserProfilePage() {\n  const suhbeader = useSubheader();\n  suhbeader.setTitle(\"User profile\");\n  return (\n    <div className=\"d-flex flex-row\">\n      <ProfileCard></ProfileCard>\n      <div className=\"flex-row-fluid ml-lg-8\">\n        <Switch>\n          <Redirect\n            from=\"/user-profile\"\n            exact={true}\n            to=\"/user-profile/profile-overview\"\n          />\n          <Route\n            path=\"/user-profile/profile-overview\"\n            component={ProfileOverview}\n          />\n          <Route\n            path=\"/user-profile/account-information\"\n            component={AccountInformation}\n          />\n          <Route\n            path=\"/user-profile/change-password\"\n            component={ChangePassword}\n          />\n          <Route\n            path=\"/user-profile/email-settings\"\n            component={EmailSettings}\n          />\n          <Route\n            path=\"/user-profile/personal-information\"\n            component={PersonaInformation}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}