{"version":3,"sources":["app/modules/manageTransactions/createtransForm.js","app/modules/manageTransactions/translist.js","app/modules/manageTransactions/transpage.js"],"names":["CreateTransForm","props","context","createdByOption","salesOption","customerOption","onFileChange","event","_state","state","formEntity","attachments","target","files","setState","onFileUpload","FormData","append","handleCreatedbyChange","e","console","log","value","created_by","handleSalesChange","sales","handleCustomerChange","customer","parentRef","paramObj","amount","date","payment_method","notes","formValidated","List","SalesList","CustList","StaffList","loading","updateBool","options","createdOption","x","Date","toLocaleDateString","split","month","year","undefined","length","this","loadGrid","loadGridCust","loadGridStaff","_that","isLoading","loadingStatus","status","message","CRUD","Sales_sales","response","data","results","showUsersList","map","item","index","push","id","label","user","full_name","CustomerList","Customer_customer","Staff_staff","showListView","Utils","convertingDate","Transactions_transactions","formData","Form","noValidate","validated","className","name","selectedValue","placeholder","theme","colors","neutral50","onChange","sold_by","style","overflow","openOnFocus","type","required","maxLength","size","rows","onClick","cancelForm","submitForm","React","Component","Spinner","position","top","left","transform","paddingTop","color","KeyWordList","PrintList","cust_options","sales_options","filter_opt","selectedFile","handlefilterOpt","filterid_options","clearButton","handlefilterid","filter_id","handleCheckbox","checked","allChecked","handlePageClick","selectedPage","newState","url","newUrl","getMoreUrl","offset","selected","limit","includes","replace","entityName","heading","isdataLoading","transModelObject","date__gte","date__lte","count","currentPage","startingPoint","showDetail","that","document","getElementsByClassName","innerHTML","getElementById","loadGridSales","window","print","flag","pageCount","Math","ceil","PrintingListFun","filterSend","querySelectorAll","click","some","el","Transaction_transaction","dataTable","row","JQUERY","remove","draw","show","oldDate","dateObject","dateString","toLocaleTimeString","list","CUSTOMER","SALES","AMOUNT","PAYMENT_METHOD","CREATED_DATE","edit","animationIn","animationOut","isVisible","width","Placeholder","display","float","marginTop","marginLeft","height","Button","clearFilter","aria-hidden","justifyContent","marginRight","printData","filename","key","align","OverlayTrigger","placement","overlay","Tooltip","padding","showDetailedModal","colSpan","alignItems","flexDirection","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","subContainerClassName","activeClassName","Modal","centered","onHide","handleClose","Header","closeButton","backgroundColor","Title","Body","dateChanger","dues","KeywordsPage"],"mappings":"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","file":"static/js/4.d3864a95.chunk.js","sourcesContent":["import React from \"react\";\nimport * as Utils from \"../../Common/Common\";\nimport { Form } from \"react-bootstrap\";\nimport * as CRUD from \"../../Common/CRUD\";\nimport Select from \"react-select\";\nexport default class CreateTransForm extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    //debugger;\n    this.state = {\n      formEntity: props.parentRef.state.paramObj ?? {\n        sales: \"\",\n        customer: \"\",\n        amount: \"\",\n        date: \"\",\n        payment_method: \"\",\n        created_by: \"\",\n        notes: \"\",\n        attachments: null,\n      },\n      formValidated: false,\n      List: [],\n      SalesList: [],\n      CustList: [],\n      StaffList: [],\n      loading: false,\n      updateBool: false,\n      options: [],\n\n      createdOption: [],\n      salesOption: [],\n      customerOption: [],\n    };\n  }\n  createdByOption = [];\n  salesOption = [];\n  customerOption = [];\n  convertingDate(x) {\n    const backendDate = x;\n    const dateObject = new Date(backendDate);\n    const dateString = dateObject.toLocaleDateString();\n\n    var [month, date, year] = dateString.split(\"/\");\n    if (month !== undefined && date !== undefined && year !== undefined) {\n      if (month.length < 2) {\n        month = \"0\" + month;\n      }\n      if (date.length < 2) {\n        date = \"0\" + date;\n      }\n    }\n    const newDate = `${year}-${month}-${date}`;\n    //const newDate=\"2022-12-01\";\n    // exact date format is : yyyy-mm-dd\n\n    return newDate;\n  }\n\n  componentDidMount() {\n    this.loadGrid(this);\n    this.loadGridCust();\n    this.loadGridStaff();\n  }\n\n  onFileChange = (event) => {\n    // debugger;\n    // Update the state\n    let _state = this.state;\n    _state.formEntity.attachments = event.target.files[0];\n    this.setState(_state);\n  };\n\n  onFileUpload = () => {\n    const formData = new FormData();\n    formData.append(\"attachments\", this.state.formEntity.attachments);\n  };\n\n  handleCreatedbyChange = (e) => {\n    //debugger;\n\n    console.log(\"created by:\" + e.value);\n    let _state = this.state;\n    _state.formEntity.created_by = e.value;\n\n    this.setState(_state, function() {\n      // executing the set state function\n      //debugger;\n    });\n  };\n\n  handleSalesChange = (e) => {\n    //debugger;\n\n    console.log(\"sales:\" + e.value);\n    let _state = this.state;\n    //debugger\n    _state.formEntity.sales = e.value;\n    this.setState(_state, function() {\n      // executing the set state function\n      //debugger;\n    });\n  };\n  handleCustomerChange = (e) => {\n    //debugger;\n\n    console.log(\"Customer is:\" + e.value);\n    let _state = this.state;\n    _state.formEntity.customer = e.value;\n    this.setState(_state, function() {\n      // executing the set state function\n      //debugger;\n    });\n  };\n\n  // code added for fetching sales data from API\n  loadGrid(_that) {\n    //debugger;\n\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.SalesList = [];\n    _state.isLoading = true;\n    //  if(_state.paramObj!=null){\n    //       _state.updateBool=true;\n\n    //     }\n    _state.loadingStatus = {\n      status: true,\n      message: \"Loading ...\",\n    };\n    // _state.List = [];\n    // _state.isLoading = false;\n    // _state.loadingStatus = { status: false, message: \"\" };\n    // _that.setState(_state);\n    CRUD.getRequest(CRUD.APIRoutes.Sales_sales + \"?limit=1000\", function(\n      response\n    ) {\n      if (response?.data?.results.length > 0) {\n        // debugger;\n        _state.isLoading = false;\n        _state.loadingStatus = { status: true, message: \"\" };\n        _state.showUsersList = true;\n\n        //  debugger;\n        _state.salesOption = [];\n        response.data.results.map((item, index) => {\n          _state.salesOption.push({\n            value: item.id,\n            label: item?.customer?.user?.full_name,\n          });\n        });\n        //  debugger;\n        console.log(_state.customerOption);\n\n        _that.setState(_state, function() {\n          // _that.initializeDT();\n        });\n      } // Api Exception // Api Exception\n      else {\n        let _state = _that.state;\n        _state.CustomerList = [];\n        _state.isLoading = false;\n        _state.loadingStatus = { status: false, message: \"\" };\n        _that.setState(_state);\n      }\n    });\n  }\n\n  // start of data fetching from API\n\n  // end of data fetching from API\n\n  // code for fetching customer data from API\n  loadGridCust(_that) {\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.CustList = [];\n    _state.isLoading = true;\n    _state.loadingStatus = { status: true, message: \"Loading ...\" };\n    CRUD.getRequest(CRUD.APIRoutes.Customer_customer, function(response) {\n      //  debugger;\n      _state.isLoading = false;\n      _state.loadingStatus = { status: true, message: \"\" };\n      _state.showUsersList = true;\n\n      // debugger;\n      _state.customerOption = [];\n      response.data.results.map((item, index) => {\n        _state.customerOption.push({\n          value: item.id,\n          label: item?.user?.full_name,\n        });\n      });\n\n      // debugger;\n\n      _that.setState(_state, function() {\n        // _that.initializeDT();\n      });\n    });\n  }\n  // end of customer API data fetching\n\n  // calling the API fr store staff\n\n  loadGridStaff(_that) {\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.StaffList = [];\n    _state.isLoading = true;\n    _state.loadingStatus = { status: true, message: \"Loading ...\" };\n    CRUD.getRequest(CRUD.APIRoutes.Staff_staff + \"?limit=1000\", function(\n      response\n    ) {\n      //   debugger;\n      _state.isLoading = false;\n      _state.loadingStatus = { status: true, message: \"\" };\n      _state.showUsersList = true;\n\n      //   debugger;\n      response.data.results.map((item, index) => {\n        _state.createdOption.push({\n          value: item.id,\n          label: item?.user?.full_name,\n        });\n      });\n      //debugger;\n\n      _that.setState(_state, function() {\n        // _that.initializeDT();\n      });\n    });\n  }\n\n  // end of store staff API data fetching\n\n  cancelForm() {\n    this.props.parentRef.showListView(\n      true\n      // this.props.parentRef.state.paramObj.entityName + \"s\",\n      // this.props.parentRef\n    );\n  }\n  submitForm() {\n    if (Utils.validateForm(\"formEntity\", this)) {\n      let _that = this;\n      let _state = _that.state;\n      _state.loading = true;\n\n      _that.setState(_state);\n      _that.onFileUpload();\n\n      // FOR PUT METHOD\n      if (this.state.formEntity.id !== undefined) {\n        if (\n          _state.formEntity.attachments == null ||\n          _state.formEntity.attachments === undefined ||\n          _state.formEntity.attachments === \"\"\n        ) {\n          if (_state.formEntity.date.length > 9) {\n            _state.formEntity.date = _that.convertingDate(\n              _state.formEntity.date\n            );\n            _that.setState(_state);\n          }\n\n          CRUD.putRequest(\n            CRUD.APIRoutes.Transactions_transactions +\n              this.state.formEntity.id +\n              \"/\",\n            this.state.formEntity,\n\n            function(response) {\n              if (response?.data?.id != null) {\n                console.log(\"response is:\", response.data.id);\n                // //debugger;\n\n                _that.props.parentRef.loadGrid(\n                  _that.props.parentRef,\n                  \"transactions/\"\n                );\n                Utils.showUpsertAlert(\n                  // this.props.parentRef.state.paramObj.entityName,\n                  \"Profile\",\n                  true\n                );\n              }\n              _state.loading = false;\n              _that.setState(_state);\n            }\n          );\n        }\n        if (_state.formEntity.attachments != null) {\n          const formData = new FormData();\n          formData.append(\"customer\", this.state.formEntity.customer);\n          formData.append(\"amount\", this.state.formEntity.amount);\n          formData.append(\"date\", this.state.formEntity.date);\n          formData.append(\"sales\", this.state.formEntity.sales);\n          formData.append(\n            \"payment_method\",\n            this.state.formEntity.payment_method\n          );\n          formData.append(\"created_by\", this.state.formEntity.created_by);\n          formData.append(\"notes\", this.state.formEntity.notes);\n          formData.append(\"attachments\", this.state.formEntity.attachments);\n\n          CRUD.putFileRequest(\n            // CRUD.APIRoutes.Transactions_transactions,this.state.formEntity.id +\n            // \"/\",\n            // formData,\n\n            CRUD.APIRoutes.Transactions_transactions +\n              this.state.formEntity.id +\n              \"/\",\n            formData,\n            function(response) {\n              if (response?.data?.id != null) {\n                console.log(\"response is:\", response.data.id);\n                // //debugger;\n\n                _that.props.parentRef.loadGrid(\n                  _that.props.parentRef,\n                  \"transactions/\"\n                );\n                Utils.showUpsertAlert(\"Profile\", false);\n              }\n              _state.loading = false;\n              _that.setState(_state);\n            }\n          );\n        }\n      } else if (_state.formEntity.attachments != null) {\n        if (_state.formEntity.date.length > 9) {\n          _state.formEntity.date = _that.convertingDate(_state.formEntity.date);\n        }\n        const formData = new FormData();\n        formData.append(\"customer\", this.state.formEntity.customer);\n        formData.append(\"amount\", this.state.formEntity.amount);\n        formData.append(\"date\", this.state.formEntity.date);\n        formData.append(\"sales\", this.state.formEntity.sales);\n        formData.append(\"payment_method\", this.state.formEntity.payment_method);\n        formData.append(\"created_by\", this.state.formEntity.created_by);\n        formData.append(\"notes\", this.state.formEntity.notes);\n        formData.append(\"attachments\", this.state.formEntity.attachments);\n\n        CRUD.postFileRequest(\n          CRUD.APIRoutes.Transactions_transactions,\n          formData,\n\n          function(response) {\n            if (response?.data?.id != null) {\n              console.log(\"response is:\", response.data.id);\n              // //debugger;\n\n              _that.props.parentRef.loadGrid(\n                _that.props.parentRef,\n                \"transactions/\"\n              );\n              Utils.showUpsertAlert(\"Profile\", false);\n            }\n            _state.loading = false;\n            _that.setState(_state);\n          }\n        );\n      } else if (_state.formEntity.attachments == null) {\n        //  debugger;\n        CRUD.postRequest(\n          CRUD.APIRoutes.Transactions_transactions,\n          this.state.formEntity,\n          function(response) {\n            if (response?.data?.id != null) {\n              //     debugger;\n              console.log(\"response is:\", response.data.id);\n              // //debugger;\n\n              _that.props.parentRef.loadGrid(\n                _that.props.parentRef,\n                \"transactions/\"\n              );\n              Utils.showUpsertAlert(\"Profile \", false);\n            }\n            _state.loading = false;\n            _that.setState(_state);\n          }\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <Form\n        noValidate\n        validated={this.state.formValidated}\n        id=\"formEntity\"\n        className=\"needs-validation\"\n      >\n        <div className=\"row\">\n          {/* store staff div  */}\n          <div className=\"col-lg-4 form-group\">\n            <label className=\"form-label\">\n              Created by:<span className=\"text-danger\"> *</span>\n            </label>\n\n            <Select\n              id=\"created_by\"\n              name=\"created_by\"\n              className=\"\"\n              options={this?.state.createdOption}\n              selectedValue={this?.state?.formEntity?.created_by || \"\"}\n              placeholder={\n                this?.state?.formEntity?.created_by?.user?.full_name ||\n                \"Please Select\"\n              }\n              theme={(theme) => ({\n                ...theme,\n                colors: {\n                  ...theme.colors,\n                  neutral50: \"#1A1A1A\", // Placeholder color\n                },\n              })}\n              onChange={(e) => {\n                this.handleCreatedbyChange(e);\n              }}\n            ></Select>\n          </div>\n\n          {/* sales */}\n          <div className=\"col-lg-4 form-group\">\n            <label className=\"form-label\">\n              Sales<span className=\"text-danger\"> *</span>\n            </label>\n            <Select\n              id=\"sales\"\n              name=\"sales\"\n              className=\"\"\n              options={this?.state.salesOption}\n              selectedValue={this?.state?.formEntity?.sold_by || \"\"}\n              placeholder={\n                this?.state?.formEntity?.sold_by?.user?.full_name ||\n                \"Please Select\"\n              }\n              theme={(theme) => ({\n                ...theme,\n                colors: {\n                  ...theme.colors,\n                  neutral50: \"#1A1A1A\", // Placeholder color\n                },\n              })}\n              onChange={(e) => {\n                this.handleSalesChange(e);\n              }}\n            ></Select>\n\n            {/*  */}\n          </div>\n\n          <div className=\"col-lg-4 form-group\">\n            {/* customer */}\n            <label className=\"form-label\">\n              Customer<span className=\"text-danger\"> *</span>\n            </label>\n            <Select\n              style={{ overflow: \"visible\" }}\n              id=\"customer\"\n              openOnFocus={true}\n              name=\"customer\"\n              className=\"\"\n              options={this?.state?.customerOption}\n              //menuPortalTarget={document.body}\n              selectedValue={this?.state?.formEntity?.customer || \"\"}\n              placeholder={\n                this.state?.formEntity?.customer?.user?.full_name ||\n                \"Please Select\"\n              }\n              theme={(theme) => ({\n                ...theme,\n                overflow: \"visible\",\n                colors: {\n                  ...theme.colors,\n                  neutral50: \"#1A1A1A\", // Placeholder color\n                },\n              })}\n              onChange={(e) => {\n                this.handleCustomerChange(e);\n              }}\n            ></Select>\n          </div>\n\n          <div className=\"col-lg-4 form-group\">\n            {/* Amount */}\n            <label className=\"form-label\">\n              Amount<span className=\"text-danger\"> *</span>\n            </label>\n            <input\n              type=\"number\"\n              id=\"amount\"\n              name=\"amount\"\n              className=\"form-control form-control-sm fs-md\"\n              value={this?.state?.formEntity?.amount || \"\"}\n              onChange={(e) =>\n                Utils.updateInputValueInState(\n                  this.state.formEntity,\n                  e,\n                  this,\n                  this.state\n                )\n              }\n              required\n            />\n          </div>\n\n          <div className=\"col-lg-4 form-group\">\n            {/* adding date */}\n\n            <label className=\"form-label\">\n              Date <span className=\"text-danger\"> *</span>\n            </label>\n            {/* input form */}\n            <input\n              type=\"date\"\n              id=\"date\"\n              name=\"date\"\n              className=\"form-control form-control-sm fs-md\"\n              //value=\"2021-01-01\"\n\n              value={this.convertingDate(this?.state?.formEntity?.date) || \"\"}\n              //value={this.state.formEntity.date || \"\"}\n              placeholder={this.state.formEntity.date}\n              onChange={(e) =>\n                Utils.updateInputValueInState(\n                  this.state.formEntity,\n                  e,\n                  this,\n                  this.state\n                )\n              }\n              required\n            />\n          </div>\n\n          <div className=\"col-lg-4 form-group\">\n            {/*payment method  */}\n            <label className=\"form-label\">\n              Payment Method\n              <span className=\"text-danger\">\n                <span className=\"text-danger\"> *</span>{\" \"}\n              </span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"payment_method\"\n              name=\"payment_method\"\n              className=\"form-control form-control-sm fs-md \"\n              value={this?.state?.formEntity?.payment_method || \"\"}\n              onChange={(e) =>\n                Utils.updateInputValueInState(\n                  this.state.formEntity,\n                  e,\n                  this,\n                  this.state\n                )\n              }\n              required\n            />\n          </div>\n\n          {/* <div className=\"col-lg-4 form-group\">\n           \n            <label className=\"form-label\">\n              Created By<span className=\"text-danger\"> </span>\n            </label>\n            <input\n              type=\"text\"\n              id=\"created_by\"\n              name=\"created_by\"\n              className=\"form-control form-control-sm fs-md\"\n              value={this.state.formEntity.created_by || \"\"}\n              onChange={(e) =>\n                Utils.updateInputValueInState(\n                  this.state.formEntity,\n                  e,\n                  this,\n                  this.state\n                )\n              }\n              required\n            />\n          </div> */}\n\n          <div className=\"col-lg-4 form-group\">\n            <label className=\"form-label\">\n              Invoice, Receipt or any other document of Transaction\n            </label>\n            <input\n              id=\"attachments\"\n              name=\"attachments\"\n              className=\"form-control\"\n              maxLength={10}\n              onChange={this.onFileChange}\n              // onClick={this.onFileUpload}\n              size=\"10\"\n              type=\"file\"\n            ></input>\n          </div>\n\n          <div className=\"col-lg-4 form-group\">\n            {/* Note... */}\n            <label className=\"form-label\">\n              Any Important Note about this Transaction\n              <span className=\"text-danger\"> </span>\n            </label>\n\n            <textarea\n              className=\"form-control\"\n              id=\"notes\"\n              name=\"notes\"\n              rows=\"3\"\n              value={this.state.formEntity.notes || \"\"}\n              onChange={(e) =>\n                Utils.updateInputValueInState(\n                  this.state.formEntity,\n                  e,\n                  this,\n                  this.state\n                )\n              }\n            ></textarea>\n\n            {/* end ff option */}\n          </div>\n        </div>\n\n        <div className=\"d-flex justify-content-end mt-10\">\n          <button\n            type=\"button\"\n            id=\"btnCloseUserModal\"\n            onClick={() => this.cancelForm()}\n            className=\"btn btn-sm btn-danger mr-5\"\n          >\n            {\" \"}\n            <span className=\"fa fa-times\"></span> Close\n          </button>\n          <button\n            type=\"button\"\n            id=\"btnSaveUser\"\n            onClick={() => this.submitForm()}\n            className=\"btn btn-sm btn-success\"\n          >\n            {\" \"}\n            {!this.state.loading && <span className=\"fa fa-save\"></span>}\n            {this.state.loading && (\n              <span className=\"ml-3 spinner spinner-white\"></span>\n            )}{\" \"}\n            Save\n          </button>\n        </div>\n      </Form>\n    );\n  }\n}\n","import React from \"react\";\n// var $  = require( 'jquery' );\nimport JQUERY from \"jquery\";\nimport { Animated } from \"react-animated-css\";\nimport { Modal, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport CreateTransForm from \"./createtransForm\";\nimport { Button, Checkbox } from \"react-bootstrap\";\nimport * as CRUD from \"../../Common/CRUD\";\nimport * as Utils from \"../../Common/Common\";\nimport { Form } from \"react-bootstrap\";\nimport { isNull } from \"lodash\";\nimport App from \"../../../_metronic/_partials/Pagination/App\";\nimport ReactPaginate from \"react-paginate\";\nimport Select from \"react-select\";\nimport { CSVLink } from \"react-csv\";\n\nimport { InfinitySpin } from \"react-loader-spinner\";\nlet dataTable;\n\nconst Spinner = () => (\n  <>\n    <div\n      style={{\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        paddingTop: \"100px\",\n      }}\n    >\n      <br />\n      <br />\n      <br />\n      <br />\n      <InfinitySpin color=\"#6ee7b7\" />\n    </div>\n  </>\n);\nexport default class KeyWordList extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      showUsersList: true,\n      entityName: \"Transactions\",\n      heading: \"Transactions\",\n      paramObj: {},\n      List: [],\n      allChecked: false,\n      isdataLoading: false,\n      transModelObject: [],\n      SalesList: [],\n      CustList: [],\n      //PrintList: [],\n      filterid_options: [],\n      filter_opt: \"\",\n      filter_id: \"\",\n      date__gte: \"\",\n      date__lte: \"\",\n      isLoading: true,\n      offset: 0,\n      count: 0,\n      limit: 20,\n      getMoreUrl: \"\",\n      currentPage: 0,\n      startingPoint: 1,\n      showDetail: false,\n      clearButton: false,\n\n      loadingStatus: { status: true, message: \"Loading ...\" },\n    };\n  }\n  // On file select (from the pop up)\n\n  PrintList = [];\n  cust_options = [];\n  sales_options = [];\n\n  filter_opt = [\n    { value: \"sales\", label: \"Sales\" },\n    { value: \"customer\", label: \"Customer\" },\n  ];\n\n  onFileChange = (event) => {\n    // Update the state\n    this.setState({ selectedFile: event.target.files[0] });\n  };\n\n  handlefilterOpt = (e) => {\n    console.log(\"filter opt is:\" + e.value);\n    let _that = this;\n    let _state = this.state;\n\n    console.log(\"filter opt is:\" + e.value + \"  \" + e.label);\n    _state.filter_opt = e.value;\n    //debugger;\n    this.setState(_state, function() {\n      // executing the set state function\n      //debugger;\n    });\n    if (e.value === \"customer\") {\n      _state.filterid_options = _that.cust_options;\n      _state.filter_opt = e.value;\n      //  _that.loadGridCust();\n    }\n    if (e.value === \"sales\") {\n      _state.filterid_options = _that.sales_options;\n      _state.filter_opt = e.value;\n    }\n    if(e.value !==\"\"){\n      _state.clearButton=true;\n    \n    }\n  };\n\n  handlefilterid = (e) => {\n    console.log(\"filter id is:\" + e.value);\n    let _state = this.state;\n    console.log(\"filter id is:\" + e.value + \"  \" + e.label);\n    _state.filter_id = e.value;\n    if(_state.filter_id!==\"\"){\n      _state.clearButton=true;\n    }\n    this.setState(_state, function() {\n      // executing the set state function\n      //debugger;\n    });\n  };\n\n  handleCheckbox = (e) => {\n    const target = e.target;\n    const checked = target.checked;\n    console.log(checked);\n    let _state = this.state;\n    _state.allChecked = checked;\n\n    // debugger;\n  };\n\n  clearFilter(that) {\n    debugger;\n    let _that = that ?? this;\n    let _state = this.state;\n    _state.date__gte = \"\";\n    _state.date__lte = \"\";\n    _state.filter_opt = \"\";\n    _state.filter_id = \"\";\n\n\ndebugger;\n    if(document.getElementsByClassName(' css-1uccc91-singleValue')[0]!==undefined){\n    document.getElementsByClassName(' css-1uccc91-singleValue')[0].innerHTML = \"Select\";\n    if(document.getElementsByClassName(' css-1uccc91-singleValue')[1]!==undefined){\n    document.getElementsByClassName(' css-1uccc91-singleValue')[1].innerHTML = \"Select\";\n    }\n  }\n    \n\n\n    debugger;\n    document.getElementById(\"date__gte\").value = \"\";\n    document.getElementById(\"date__lte\").value = \"\";\n    \n    document.getElementById(\"filter_opt\").value = \"\";\n\n    document.getElementById(\"filter_id\").value = \"\";\n  }\n\n  handlePageClick = (e) => {\n    let newState = this.state;\n    var selectedPage;\n    let url = \"\";\n    let newUrl = this.state.getMoreUrl;\n    if (newState.allChecked === false) {\n      //   debugger;\n      newState.loadingStatus = true;\n      this.setState({ loadingStatus: true });\n      //debugger;\n      selectedPage = e.selected;\n      const offset = selectedPage * this.state.limit;\n      //const offset =selectedPage;\n\n     \n\n      url = `${newUrl}/?limit=${this.state.limit}&offset=${offset}`;\n      if (\n        url.includes(\"date__gte\") ||\n        url.includes(\"date__lte\") ||\n        url.includes(\"customer\") ||\n        url.includes(\"sales\")\n      ) {\n        url = url.replace(\"/?limit\", \"&limit\");\n      }\n    } else {\n      \n      url = url + \"&limit=1000\";\n    }\n\n   \n    this.loadGrid(null, url, selectedPage);\n  };\n\n  componentDidMount() {\n    this.loadGrid(null, CRUD.APIRoutes.Transactions_transactions);\n\n    this.loadGridSales();\n    this.loadGridCust();\n    // this.loadGridFilter();\n    // this.loadGrid(null,CRUD.APIRoutes.Transactions_transactions);\n  }\n\n  printData() {\n    window.print();\n  }\n\n  // for data table\n  initializeFilteredDT() {\n    // dataTable = JQUERY(\"#List\").DataTable({\n    //   responsive: true,\n    //   columnDefs: [\n    //     { responsivePriority: 1, targets: 0 },\n    //     { responsivePriority: 2, targets: -1 },\n    //   ],\n    // });\n  }\n\n  showListView(flag, heading, that) {\n    that = that ?? this;\n    let _state = that.state;\n    _state.showUsersList = flag;\n    _state.heading = heading;\n    that.setState(_state, function() {\n      if (flag) {\n        that.loadGrid(null, CRUD.APIRoutes.Transactions_transactions);\n        // that.initializeDT();\n      }\n    });\n  }\n  // shouldComponentUpdate() {\n  //     return false; // This will cause component to never re-render.\n  //   }\n  showDetailedModal(item) {\n    //debugger;\n    console.log(item);\n    console.log(\"in new model\");\n\n    let _state = this.state;\n    // debugger;\n    _state.showDetail = true;\n    _state.transModelObject = item;\n    // debugger;\n    console.log(\"Display List Array is:-\");\n    console.log(_state.transModelObject);\n    this.setState(_state);\n    //this.loadTransaction(item);\n  }\n\n  loadGrid(_that, url, selectedPage = 0) {\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.List = [];\n\n    _state.loadingStatus = {\n      status: true,\n      message: \"Loading ...\",\n    };\n    _state.isdataLoading = true;\n\n    //debugger;\n    _that.setState(_state, function() {});\n\n    // if(_state.allChecked){\n    //   url+=\"?limit=1000\";\n    // }\n    // if(!_state.allChecked){\n    //   _state.limit=20;\n    //   //url+=\"?limit=20\";\n    // }\n\n    // comment it for testing purpose\n    CRUD.getRequest(url, function(response) {\n  debugger;\n      if (response?.data?.results?.length > 0) {\n        //debugger;\n        let _state = _that.state;\n        _state.List = response.data.results;\n        _state.isdataLoading = false;\n        _state.isLoading = false;\n        //debugger\n        if (_state.allChecked == false) {\n          _state.pageCount = Math.ceil(response?.data.count / _state.limit);\n          _state.count = response?.data.count;\n          _state.getMoreUrl = url;\n          _state.startingPoint = 1;\n          //_state.currentPage=_state.handlePageClick.selectedPage;\n          console.log(\"Selected page is:\" + _state.currentPage);\n          //debugger;\n          // main working line....\n          _state.offset = selectedPage;\n        }\n        if (_state.allChecked == true) {\n          _state.count = response?.data.count;\n          _state.startingPoint = 1;\n        }\n        // debugger;\n        console.log(\"Seleced page is:\" + _state.currentPage);\n        console.log(\n          \"Page count is:\" + _state.pageCount + \" and count is:\" + _state.count\n        );\n        _state.loadingStatus = { status: true, message: \"\" };\n        _state.showUsersList = true;\n        _that.PrintingListFun(_state.List);\n\n        _that.setState(_state, function() {\n          //  debugger;\n          console.log(_state.List);\n        });\n      } // Api Exception\n      else {\n        let _state = _that.state;\n        _state.isdataLoading = false;\n        _state.startingPoint = 0;\n        _state.pageCount = 0;\n        _state.count = 0;\n        _state.List = [];\n        // _state.isLoading = false;\n        _state.loadingStatus = { status: true, message: \"\" };\n        _that.setState(_state);\n      }\n    });\n  }\n  // for sales data\n  loadGridSales(_that) {\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.SalesList = [];\n    _state.isLoading = true;\n    _state.loadingStatus = {\n      status: true,\n      message: \"Loading ...\",\n    };\n\n    CRUD.getRequest(CRUD.APIRoutes.Sales_sales + \"?limit=100\", function(\n      response\n    ) {\n      if (response?.data?.results?.length > 0) {\n        //debugger;\n        console.log(response.data.results);\n        let _state = _that.state;\n        _state.SalesList = response.data.results;\n        _state.isLoading = false;\n        _state.loadingStatus = { status: true, message: \"\" };\n        _state.showUsersList = true;\n\n        //_state.filterid_options=[];\n        //debugger;\n        _that.sales_options = [];\n        \n        response.data.results.map((item, index) => {\n          _that.sales_options.push({\n            value: item.id,\n            label: item?.customer?.user?.full_name || \"N/A\",\n          });\n        });\n\n        debugger;\n        console.log(_that.sales_options);\n\n        _that.setState(_state, function() {});\n      } // Api Exception\n      else {\n        let _state = _that.state;\n        _state.SalesList = [];\n        _state.isLoading = false;\n        _state.loadingStatus = { status: false, message: \"\" };\n        _that.setState(_state);\n      }\n    });\n  }\n\n  // for customer data\n  loadGridCust(_that) {\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.CustList = [];\n    _state.isLoading = true;\n    _state.loadingStatus = { status: true, message: \"Loading ...\" };\n    CRUD.getRequest(CRUD.APIRoutes.Customer_customer + \"?limit=100\", function(\n      response\n    ) {\n      // debugger;\n      if (response.data.results.length > 0) {\n        let _state = _that.state;\n        _state.CustList = response.data.results;\n        _state.isLoading = false;\n        _state.loadingStatus = { status: true, message: \"\" };\n        _state.showUsersList = true;\n        // debugger;\n        _that.cust_options = [];\n        response.data.results.map((item, index) => {\n          _that.cust_options.push({\n            label: item.user.full_name,\n            value: item.id,\n          });\n        });\n\n        console.log(_that.cust_options);\n        //debugger;\n        _that.setState(_state, function() {\n          //   _that.initializeDT();\n        });\n      } // Api Exception\n      else {\n        let _state = _that.state;\n        _state.isdataLoading = false;\n        _state.CustList = [];\n        _state.isLoading = false;\n        _state.loadingStatus = { status: false, message: \"\" };\n        _that.setState(_state);\n      }\n    });\n  }\n\n  // load grid for filtered data\n  loadGridFilter(_that) {\n    _that = _that ?? this;\n    let _state = _that.state;\n    _state.List = [];\n    //_state.isLoading = true;\n    _state.loadingStatus = {\n      status: true,\n      message: \"Loading ...\",\n    };\n\n    _that.filterSend(_that);\n    // end of filtered data fetching function\n\n    // for filtering of data\n  }\n  // function for applying the data filter....\n  filterSend(that) {\n    // debugger;\n    let _that = that ?? this;\n    let _state = this.state;\n\n    if (document.querySelectorAll('[aria-label=\"Page 1\"]')[0]) {\n      document.querySelectorAll('[aria-label=\"Page 1\"]')[0].click();\n    }\n    //  debugger;\n    let url = CRUD.APIRoutes.Transactions_transactions;\n\n    //                                            start of if else\n    if (_state?.date__gte !== \"\" && _state?.date__lte !== \"\") {\n      console.log(\"start date is:\" + _state?.date__gte);\n      url =\n        url +\n        \"?date__gte=\" +\n        _state?.date__gte +\n        \"&date__lte=\" +\n        _state?.date__lte;\n\n      //  if start date and end date is present\n\n      if (\n        _state?.filter_opt === \"customer\" ||\n        _state?.filter_opt === \"customer\"\n      ) {\n        url = url + \"&customer=\" + _state?.filter_id;\n      }\n      if (_state?.filter_opt === \"sales\" || _state?.filter_opt === \"sales\") {\n        url = url + \"&sales=\" + _state?.filter_id;\n      }\n    }\n\n    if (_state?.date__gte !== \"\" && _state?.date__lte == \"\") {\n      // if only start date is present\n      url = url + \"?date__gte=\" + _state?.date__gte;\n      if (_state?.filter_opt === \"sales\" || _state?.filter_opt === \"sales\") {\n        url = url + \"&sales=\" + _state?.filter_id;\n      }\n      if (\n        _state?.filter_opt === \"customer\" ||\n        _state?.filter_opt === \"customer\"\n      ) {\n        url = url + \"&customer=\" + _state?.filter_id;\n      }\n    }\n\n    if (_state?.date__lte !== \"\" && _state?.date__gte == \"\") {\n      // if only end date is present\n      url = url + \"?date__lte=\" + _state?.date__lte;\n      if (\n        _state?.filter_opt === \"customer\" ||\n        _state?.customer === \"customer\"\n      ) {\n        url = url + \"&customer=\" + _state?.filter_id;\n      }\n      if (_state?.filter_opt === \"sales\" || _state?.filter_opt === \"sales\") {\n        url = url + \"&sales=\" + _state?.filter_id;\n      }\n    }\n\n    if (_state?.date__gte === \"\" && _state?.date__lte === \"\") {\n      // debugger;\n      // if no date is selected\n      if (\n        _state?.filter_opt === \"customer\" ||\n        _state?.customer === \"customer\"\n      ) {\n        url = url + \"?customer=\" + _state?.filter_id;\n      }\n      if (_state?.filter_opt === \"sales\" || _state?.filter_opt === \"sales\") {\n        url = url + \"?sales=\" + _state?.filter_id;\n      }\n    }\n\n    if (_state.allChecked === true) {\n      _state.limit = 1000;\n      _state.pageCount = 1;\n      _state.offset = 0;\n\n      const conditions = [\"customer\", \"sales\", \"date__gte\", \"date__lte\"];\n      if (conditions.some((el) => url.includes(el))) {\n        //url=url+'&limit='+_state.limit+'&offset='+_state.offset;\n        url = url + \"&limit=\" + _state.limit;\n      } else {\n        url = url + \"?limit=\" + _state.limit;\n      }\n    \n    }\n    if (_state.allChecked === false) {\n      _state.limit = 20;\n    \n    }\n    this.loadGrid(_that, url);\n\n    \n  }\n\n  edit(user) {\n    //debugger;\n    let _state = this.state;\n    _state.paramObj = user;\n\n    this.setState(_state);\n    this.showListView(\n      false,\n      user\n        ? `Edit ${this.state.entityName}`\n        : `Add New ${this.state.entityName}`\n    );\n  }\n  delete(id) {\n    let _that = this;\n    Utils.showConfirmation(\n      `Do you want to delete this ${this.state.entityName}?`,\n      \"Are you sure?\",\n      () => {\n        CRUD.deleteRequest(CRUD.APIRoutes.Transaction_transaction, id, function(\n          response\n        ) {\n          if (response?.data) {\n            // debugger;\n            Utils.showDeleteAlert(_that.state.entityName);\n            let _state = _that.state;\n            _state.List = Utils.removeElementFromArray(_state.List, \"id\", id);\n            _that.setState(_state, function() {\n              dataTable\n                .row(JQUERY(\"#row_\" + id)[0])\n                .remove()\n                .draw();\n            });\n          }\n        });\n      },\n      null\n    );\n  }\n\n  handleClose() {\n    let _state = this.state;\n    _state.show = false;\n    _state.showDetail = false;\n    this.setState(_state, function() {});\n  }\n\n  dateChanger(oldDate) {\n    const backendDate = oldDate;\n    const dateObject = new Date(backendDate);\n    const dateString = dateObject.toLocaleDateString(); // \"5/15/2022\" (default format based on user's locale)\n    const timeString = dateObject.toLocaleTimeString(); // \"5:30:00 AM\" (default format based on user's locale)\n    // const formattedDate = dateString + \" \" + timeString; // \"5/15/2022 5:30:00 AM\"\n    return dateString;\n  }\n\n  PrintingListFun(list) {\n    list = list ?? this.state.list;\n    //let listResult = [];\n    this.PrintList = [];\n    list.map((item, index) => {\n      this.PrintList.push({\n        CUSTOMER: item?.customer?.user?.full_name || \"N/A\",\n\n        SALES: item?.sales || \"N/A\",\n        AMOUNT: item?.amount || \"N/A\",\n        PAYMENT_METHOD: item?.payment_method || \"N/A\",\n\n        CREATED_DATE: new Date(item.date).toLocaleDateString(),\n      });\n    });\n    //return ;\n  }\n\n  render() {\n    // styling internal for modal\n\n    // if (this.state.isLoading) {\n    //   return (\n    //     <>\n    //       <span>Loading...</span>\n    //     </>\n    //   );\n    // }\n    const { isdataLoading, List } = this.state;\n\n    return (\n      <div className=\"card card-custom\">\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h3 className=\"card-label font-weight-bolder text-dark\">\n              {this.state.heading}\n            </h3>\n          </div>\n          <div className=\"card-toolbar\">\n            {this.state.showUsersList && (\n              <button\n                onClick={() => this.edit(undefined)}\n                type=\"button\"\n                className=\"btn btn-success btn-sm\"\n              >\n                <i className=\"fa fa-plus\"></i> Create New{\" \"}\n                {this.state.entityName}\n              </button>\n            )}\n\n            {!this.state.showUsersList && (\n              <button\n                onClick={() =>\n                  this.showListView(!this.state.showUsersList, \"Transactions\")\n                }\n                type=\"button\"\n                className=\"btn btn-dark btn-sm\"\n              >\n                <i className=\"fa fa-arrow-left\"></i> Back To List\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"card-body\">\n          {this.state.isLoading && this.state.showUsersList\n            ? \"Loading ...\"\n            : this.state.showUsersList && (\n                <Animated\n                  animationIn=\"bounceInLeft\"\n                  animationOut=\"fadeOut\"\n                  isVisible={true}\n                >\n                  {/* table for filtering */}\n\n                  <Form>\n                    <div className=\"row\">\n                      <div className=\"col-lg-10 d-flex flex-row\">\n                        {/* ----1----- */}\n                        <div className=\"col-lg-2 form-group\">\n                          {/* adding date */}\n\n                          <label className=\"form-label\"> Start Date</label>\n\n                          <input\n                            type=\"date\"\n                            id=\"date__gte\"\n                            name=\"date__gte\"\n                            style={{ width: \"100%\" }}\n                            className=\"form-control form-control-sm fs-md\"\n                            value={this?.state?.date__gte || \"\"}\n                            //placeholder={this.state.formEntity?.date__gte}\n                            onChange={(e) =>\n                              Utils.updateInputValueInState(\n                                this.state,\n                                e,\n                                this,\n                                this.state\n                              )\n                            }\n                            required\n                          />\n                        </div>\n                        {/* ----2---- */}\n                        <div className=\"col-lg-2 form-group\">\n                          {/* adding date */}\n\n                          <label className=\"form-label\">End Date</label>\n\n                          <input\n                            type=\"date\"\n                            id=\"date__lte\"\n                            name=\"date__lte\"\n                            style={{ width: \"100%\" }}\n                            className=\"form-control form-control-sm fs-md\"\n                            value={this.state?.date__lte || \"\"}\n                            // placeholder={this.state.formEntity?.date__lte}\n                            onChange={(e) =>\n                              Utils.updateInputValueInState(\n                                this.state,\n                                e,\n                                this,\n                                this.state\n                              )\n                            }\n                            required\n                          />\n                        </div>\n\n                        <div className=\"col-lg-2 form-group\">\n                          <label className=\"form-label\">Choose by Type</label>\n                          <Select\n                            id=\"filter_opt\"\n                            className=\"\"\n                            //style={{ width: \"50%\" }}\n                            name=\"filter_opt\"\n                            Placeholder=\"Choose by Type\"\n                            options={this.filter_opt}\n                            //value={this.state?.filter_opt}\n                            onChange={(e) => {\n                              this.handlefilterOpt(e);\n                            }}\n                          ></Select>\n                        </div>\n                        {/* ----3----- */}\n                        <div className=\"col-lg-2 form-group\">\n                          <label className=\"form-label\">Choose by Name </label>\n\n                          <Select\n                            id=\"filter_id\"\n                            className=\"\"\n                            //style={{ width: \"50%\" }}\n                            name=\"filter_id\"\n                            Placeholder=\"Choose by Name\"\n                            options={this.state.filterid_options}\n                            //value={this.state?.filter_opt}\n                            onChange={(e) => {\n                              this.handlefilterid(e);\n                            }}\n                          ></Select>\n                        </div>\n                        {/* ----4---- */}\n                        <div\n                          className=\"col-lg-2 form-group flex flex-end \"\n                          style={{\n                            display: \"flex\",\n                            float: \"right\",\n                            marginTop: \"30px\",\n                            marginLeft: \"40px\",\n                          }}\n                        >\n                          <input\n                            className=\"form-check-input\"\n                            type=\"checkbox\"\n                            value=\"\"\n                            id=\"checkbox\"\n                            style={{ width: \"25px\", height: \"25px\" }}\n                            onChange={(e) => {\n                              this.handleCheckbox(e);\n                            }}\n                          />\n                          <label\n                            className=\"form-label\"\n                            style={{ marginLeft: \"20px\", marginTop: \"5px\" }}\n                          >\n                            Show All Records\n                          </label>\n                        </div>\n\n                        {this.state.clearButton ? (\n                          <div className=\"col-lg-2 form-group flex flex-end mt-8 px-12\">\n                            <Button type=\"button\"\n                            className=\"btn btn-secondary  \"\n                             onClick={() => this.clearFilter()}\n                            >\n                              <i\n                                className=\"fa fa-filter\"\n                                aria-hidden=\"true\"\n                              ></i>\n                              Clear Filters\n                            </Button>\n                          </div>):(\"\")}\n\n                      </div>\n\n                      <div\n                        className=\"col-lg-2 form-group mt-8 \"\n                        style={{ display: \"flex-end\", float: \"right\" }}\n                      >\n                        <Button\n                          style={{ float: \"right\" }}\n                          onClick={() => this.filterSend()}\n                          className=\"btn btn-info\"\n                        >\n                          <i className=\"fa fa-filter\" aria-hidden=\"true\"></i>\n                          Apply Filters\n                        </Button>\n                      </div>\n                    </div>\n                  </Form>\n              \n<br/>\n<br/>\n                  {/* end of area for filtering */}\n                  <div className=\"table-responsive\">\n                    <div>\n                      {/* for buttons */}\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"flex-start\",\n                        }}\n                      >\n                        <Button\n                          style={{ float: \"left\", marginRight: \"10px\" }}\n                          onClick={() => this.printData()}\n                          className=\"btn btn-warning btn-sm\"\n                        >\n                          <i className=\"fa fa-file-pdf\" aria-hidden=\"true\"></i>\n                          Export to PDF\n                        </Button>\n\n                        <CSVLink\n                          data={this.PrintList}\n                          filename={\"Viteace Transactions Record\"}\n                        >\n                          <Button\n                            style={{ float: \"right\" }}\n                            //onClick={() => this.printDataCSV()}\n                            className=\"btn btn-primary btn-sm\"\n                          >\n                            <i\n                              className=\"fa fa-file-excel\"\n                              aria-hidden=\"true\"\n                            ></i>\n                            Export to CSV\n                          </Button>\n                        </CSVLink>\n                      </div>\n                    </div>\n\n                    <div className=\"table_responsive02\">\n                      {isdataLoading ? (\n                        <Spinner />\n                      ) : (\n                        <table\n                          id=\"List\"\n                          className=\"table table-sm table-hover table-striped table-bordered w-80\"\n                        >\n                          <thead className=\"bg-custom text-white\">\n                            <tr>\n                              {/* <th>\n                          <i className=\"fa fa-list-ol mr-1\"></i> No.\n                        </th> */}\n                              {/* name */}\n                              <th className=\"text-center\">\n                                <i className=\"fa fa-users\"></i> Customer\n                              </th>\n\n                              <th className=\"text-center\">\n                                <i className=\"fa fa-clipboard-list mr-1\"></i>{\" \"}\n                                Sales\n                              </th>\n                              {/* created date */}\n                              <th className=\"text-center\">\n                                <i className=\"fa fa-info-circle\"></i> Amount\n                              </th>\n\n                              <th className=\"text-center\">\n                                <i className=\"fa fa-credit-card\"></i> Payment\n                                Method\n                              </th>\n\n                              <th className=\"text-center\">\n                                <i className=\"fa fa-calendar-alt mr-1\"></i>{\" \"}\n                                Created Date\n                              </th>\n                              {/* <th className=\"text-center\">\n                          <i className=\"fa fa-check-circle mr-1\"></i> Active\n                        </th> */}\n                              <th className=\"text-center\">\n                                <i className=\"fa fa-bolt mr-1\"></i> Action\n                              </th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {this.state.List != null &&\n                            this.state.List.length > 0 ? (\n                              this.state.List.map((item, index) => (\n                                <tr key={index} id={`row_${item.id}`}>\n                                  {/* <td>{item.id}</td> */}\n\n                                  <td align=\"center\">\n                                    {item.customer?.user?.full_name ?? \"N/A\"}\n                                  </td>\n                                  <td align=\"center\">{item.sales ?? \"N/A\"}</td>\n                                  <td align=\"center\">\n                                    {\"Rs.  \"}\n                                    {item.amount ?? \"N/A\"}\n                                  </td>\n                                  <td align=\"center\">\n                                    {item.payment_method ?? \"N/A\"}\n                                  </td>\n                                  <td align=\"center\">\n                                    {new Date(item.date).toLocaleDateString() ??\n                                      \"N/A\"}\n                                    {/* {item.date} */}\n                                  </td>\n                                  {/* <td align=\"center\">\n                              <div className=\"custom-control custom-switch\">\n                                <input\n                                  type=\"checkbox\"\n                                  defaultChecked={item.active}\n                                  className=\"custom-control-input\"\n                                  id={\"activeSwitch\" + index}\n                                  readOnly={true}\n                                />\n                                <label\n                                  className=\"custom-control-label\"\n                                  htmlFor={\"activeSwitch\" + index}\n                                ></label>\n                              </div>\n                            </td>\n                            <td align=\"center\">\n                              <OverlayTrigger\n                                placement=\"top\"\n                                overlay={<Tooltip> Edit </Tooltip>}\n                              >\n                                <button\n                                  onClick={() => this.edit(item)}\n                                  className=\"btn btn-xs btn-icon btn-outline-primary\"\n                                >\n                                  <i className=\"fa fa-pen\"></i>\n                                </button>\n                              </OverlayTrigger>\n                              <OverlayTrigger\n                                placement=\"top\"\n                                overlay={<Tooltip> Delete </Tooltip>}\n                              >\n                                <button\n                                  onClick={() => this.delete(item.id)}\n                                  className=\"btn btn-xs btn-icon btn-outline-danger ml-3\"\n                                >\n                                  <i className=\"fa fa-trash-alt\"></i>\n                                </button>\n                              </OverlayTrigger>\n                            </td> */}\n\n                                  <td align=\"center\">\n                                    {/* show  Transaction */}\n                                    {/* <OverlayTrigger\n                                    placement=\"top\"\n                                    overlay={\n                                      <Tooltip> Show transaction </Tooltip>\n                                    }\n                                  >\n                                    <button\n                                      onClick={() => this.showModal(item)}\n                                      className=\"btn btn-xs btn-icon btn-outline-primary\"\n                                    >\n                                      <i className=\"fa fa-envelope-open-text\"></i>\n                                    </button>\n                                  </OverlayTrigger> */}\n                                    {/*  Edit transaction */}\n                                    <OverlayTrigger\n                                      placement=\"top\"\n                                      overlay={\n                                        <Tooltip> Edit Transaction </Tooltip>\n                                      }\n                                    >\n                                      <button\n                                        onClick={() => this.edit(item)}\n                                        type=\"button\"\n                                        //  className=\"btn btn-success btn-sm\"\n                                        className=\"btn btn-xs btn-icon btn-outline-primary\"\n                                      >\n                                        <i\n                                          className=\"fa fa-edit\"\n                                          style={{ padding: \"10px\" }}\n                                        ></i>\n                                      </button>\n                                    </OverlayTrigger>\n\n                                    <OverlayTrigger\n                                      placement=\"top\"\n                                      overlay={\n                                        <Tooltip> Detailed Page </Tooltip>\n                                      }\n                                    >\n                                      <button\n                                        onClick={() =>\n                                          this.showDetailedModal(item)\n                                        }\n                                        type=\"button\"\n                                        //  className=\"btn btn-success btn-sm\"\n                                        className=\"btn btn-xs btn-icon btn-outline-primary\"\n                                      >\n                                        <i\n                                          className=\"fa fa-eye\"\n                                          style={{ padding: \"10px\" }}\n                                        ></i>\n                                      </button>\n                                    </OverlayTrigger>\n                                  </td>\n                                </tr>\n                              ))\n                            ) : (\n                              <tr>\n                                <td\n                                  colSpan=\"5\"\n                                  className=\"text-center text-danger\"\n                                >\n                                  {\" \"}\n                                  <h5>No Data Available</h5>{\" \"}\n                                </td>\n                              </tr>\n                            )}\n                          </tbody>\n                        </table>\n                      )}\n\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                          alignItems: \"center\",\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <div>\n                          <div>\n                            {this.state.offset * this.state.limit +\n                              this.state.limit >\n                            this.state.count ? (\n                              <span>\n                                {\" \"}\n                                Showing{\" \"}\n                                {this.state.offset * this.state.limit +\n                                  this.state.startingPoint}{\" \"}\n                                to {this.state.count} from {this.state.count}\n                              </span>\n                            ) : (\n                              <span>\n                                {\" \"}\n                                Showing{\" \"}\n                                {this.state.offset * this.state.limit +\n                                  this.state.startingPoint}{\" \"}\n                                to{\" \"}\n                                {this.state.offset * this.state.limit +\n                                  this.state.limit}{\" \"}\n                                from {this.state.count}{\" \"}\n                              </span>\n                            )}\n                          </div>\n                        </div>\n\n                        <div>\n                          <ReactPaginate\n                            previousLabel={\"prev\"}\n                            nextLabel={\"next\"}\n                            breakLabel={\"...\"}\n                            //initialPage={0}\n                            breakClassName={\"break-me\"}\n                            pageCount={this.state.pageCount}\n                            marginPagesDisplayed={2}\n                            pageRangeDisplayed={5}\n                            onPageChange={this.handlePageClick}\n                            containerClassName={\"pagination\"}\n                            subContainerClassName={\"pages pagination\"}\n                            activeClassName={\"active\"}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </Animated>\n              )}\n\n          {!this.state.showUsersList && (\n            <Animated\n              animationIn=\"bounceInLeft\"\n              animationOut=\"fadeOut\"\n              isVisible={true}\n            >\n              <CreateTransForm parentRef={this} />\n            </Animated>\n          )}\n        </div>\n\n        {/* start of modal */}\n        <Modal\n          size=\"xl\"\n          centered\n          show={this.state.showDetail}\n          onHide={this.handleClose}\n        >\n          <Modal.Header\n            closeButton={true}\n            style={{ backgroundColor: \"#eaedf2\" }}\n          >\n            <Modal.Title\n              style={{\n                marginLeft: \"38%\",\n                marginRight: \"38%\",\n                color: \"#19c5bd\",\n              }}\n            >\n              {\" \"}\n              Transactions Detail Page\n            </Modal.Title>\n          </Modal.Header>\n\n          {/* {this.state.List.map((item, index) =>  (<li className=\"list-group-item\" key={index}> */}\n\n          {/* <Modal.Body style={{ boxShadow: \"0px 8px 12px rgb(44,123,204)\" }}> */}\n          <Modal.Body>\n            {/*  full line  1 covered */}\n\n            <div className=\"row d-flex justify-content-center\">\n              <div className=\"col-lg-12 form-group\">\n                <h4>Sales:{\"  \"}</h4>\n                <h3 style={{ color: \"#369afe\" }}>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.sales ?? \"N/A\"}\n                </h3>\n              </div>\n            </div>\n\n            <div className=\"row d-flex justify-content-center\">\n              {/* <div className=\"col-lg-4 form-group\">\n                <label>Customer Contact No:</label>\n                <b>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.customer?.user?.contact_num ??\n                    \"N/A\"}\n                </b>\n              </div> */}\n\n              {/* <div className=\"col-lg-4 form-group\">\n                <label>Customer Email:</label>\n                <b>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.customer?.user?.email ??\n                    \"N/A\"}\n                </b>\n              </div> */}\n\n              {/* complete of row */}\n            </div>\n\n            <div className=\"row d-flex justify-content-center\">\n              <div className=\"col-lg-4 form-group\">\n                <label>Customer Full Name:</label>\n                <b>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.customer?.user?.full_name ??\n                    \"N/A\"}\n                </b>\n              </div>\n\n              <div className=\"col-lg-4 form-group\">\n                <label>Date: </label>\n\n                <b>\n                  {\"   \"}\n                  {this.dateChanger(this?.state?.transModelObject?.date) ??\n                    \"N/A\"}\n                </b>\n              </div>\n\n              <div className=\"col-lg-4 form-group \">\n                <label>Amount: </label>\n\n                <b>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.amount ?? \"N/A\"}\n                </b>\n              </div>\n            </div>\n\n            {/* line 2 */}\n            <div className=\"row d-flex justify-content-between\">\n              <div className=\"col-lg-4 form-group \">\n                <label>Dues: </label>\n                <b>\n                  {\"  Rs. \"}\n                  {this?.state?.transModelObject?.customer?.dues ?? \"N/A\"}\n                </b>\n              </div>\n\n              <div className=\"col-lg-4 form-group\">\n                <label>Payment Method: </label>\n                <b>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.payment_method ?? \"N/A\"}\n                </b>\n              </div>\n              <div className=\"col-lg-4 form-group \">\n                <label>Created By: </label>\n                <b>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.created_by?.user?.full_name ??\n                    \"N/A\"}\n                </b>\n              </div>\n            </div>\n\n            <div className=\"row d-flex justify-content-between\">\n              <div className=\"col-lg-4 form-group \">\n                <h4>Notes: </h4>\n                <h5>\n                  {\"   \"}\n                  {this?.state?.transModelObject?.notes ?? \"N/A\"}\n                </h5>\n              </div>\n            </div>\n\n            <div className=\"d-flex justify-content-end mt-8\">\n              <button\n                type=\"button\"\n                id=\"btnCloseUserModal\"\n                onClick={() => this.handleClose()}\n                className=\"btn btn-sm btn-danger mr-5\"\n              >\n                {\" \"}\n                <span className=\"fa fa-times mr-1\"></span> Close\n              </button>\n            </div>\n          </Modal.Body>\n\n          {/* </li>))} */}\n        </Modal>\n        {/* end of modal */}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport TransList from \"./translist\"\n\n\nexport default function KeywordsPage() {\n    return (\n        <TransList />\n    )\n}"],"sourceRoot":""}